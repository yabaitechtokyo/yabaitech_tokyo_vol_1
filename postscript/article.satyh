@import: ../main/book-class

let postscript-article = '<
  +chapter ?:(`postscript-article`) (|
  bibliography = [];
  title = {あとがき: \SATySFi; で技術系同人誌を書いた話};
  author = {};
  |) <
  +p {このたびはyabaitech.tokyo vol.1をご購入いただきありがとうございます。この同人誌は大学院の同期で何か同人誌書いてみないかというユルいノリで始まったもので、途中には様々な犠牲が発生しました\footnote{nullpo_headは内蔵を痛め、wasabizは自転車で転倒し手を骨折。どうしてこうなった}がなんにせよ出版までこぎつけられてよかったです。実はこの同人誌はgfn氏の開発する組版システム\SATySFi;を用いて組版されています。あとがきではそのあたりの話をしようかと。}
  +p {今回\SATySFi;を採用した理由としてはgfnがyabaitech.tokyoに参加したことが大きいです\footnote{彼はこの合同誌には寄稿してはいませんが、yabaitech.tokyo名義でThe \SATySFi; Bookを頒布しています。}。何か問題に直面した時でも直接開発者に質問できるというのはかなり恵まれた環境です。実際そのおかげでここまで来ることができました。}
  +p {\SATySFi;の組版処理システムとしての能力はこの同人誌自体が証拠になっています。組版がちゃんとしているのはもちろん、目次の自動生成や図、脚注、相互参照、参考文献リストなど本を作るのに必要な機能を一通り扱うことができます。数式関連機能も充実しており、証明図を組むことができます。\SATySFi;の最大の特徴はML風の型システムと構文を言語に取り入れていることですが、実際に使ってみるとその有用さが実感できます。エラーが起きたとしてもどの部分がどのように悪いかをしっかり指摘してくれますし、種々のマクロについて型さえわかってしまえばどのようにそれを用いればいいかわかるのはかなり便利です。内部のインターフェースも型のおかげでどのような仕組みで動いているかがなんとなく把握できるため独自のマクロを作ることも(tex言語に比べれば)容易です。関数型の言語で組版をするのは新鮮で楽しい体験でした。}
  +p {一方で周辺ツールやライブラリに関してはまだ発展途上です。例えば同人誌に用いたクラスファイルはgfnがThe \SATySFi; Bookを作成するのに用いたものをベースに改造して作っています\footnote{各記事に著者/参考文献リストを書いたり目次の見栄えを変えたり。このあたりはMasWagが率先してやってくれました。}。それなしで独自に同人誌を作るのは厳しかったでしょう。インストールプロセスの改善、パッケージマネージャ、bibtex-likeな書誌情報の管理、豊富な記号等々、欲しいけれども実装されていないものはたくさんあります。しかしながらこれはチャンスでもあります。今回The \SATySFi; Bookが出版されたので\SATySFi;への情報のアクセスは大分容易になるはずです。開発者のみなさん、周辺ツールやライブラリを作って\SATySFi;にコントリビュートするなら今です!}
  % +p {最後に発起人のzeptometerから謝辞を。wasabizは技術書典に同人誌を出してみないかと私に持ち掛けてくれました。その点で彼が真の発起人であると言えるでしょう。MasWagは自分の記事を締切よりもかなり余裕をもって完成させ、余った時間をクラスファイルの編集作業に当ててくれました。censoredの表紙はいいですね、大変いいです。欲を言えば次回では記事も寄稿して欲しいです。nullpo_headは健康の大切さを我々に知らしめてくれました。そしてgfnは先にも述べたように\SATySFi;に関する手厚いサポートを提供してくれました。各位に感謝を。}
%   +section{Idea} <
%     +p{
%      \listing {
%        * 今回苦労した事、\SATySFi;について思うことなどを挙げておくと良さそう
%      }
%     }
%     >
%   +section{\SATySFi;について思うこと (i.e., 書くネタ)} <
% +p{
% \listing{
% * 普通に使えるくらい組版がちゃんとしている
% * \(primitiveの\)言語としての機能もかなり良いと思う
% * \(primitive以外の\)パッケージも結構ちゃんとしている
%     ** 証明木の描画機能
%     ** Math \(数式\)
%     ** というかgr
% * ML系言語にある程度慣れていることもあるが、:
%     ** 前提知識なしでも結構パッケージの雰囲気を読むことができる
%         *** \LaTeX;だとさっぱり読めない
%     ** inline, blockとかがわかれば多少のパッケージの改造もできる
%         *** 例:
%             **** chapterでauthorを書くようにした、番号の非表示
%             **** TOC
%         *** \LaTeX;だと厳しい
%     ** 逆にinline, blockなどがある程度わからないと型がわかっても書くのがつらいことがある
%         *** quotationなどの種類が多い
%     ** 今なら\SATySFi; bookがある。それを参照すると、割と学習コストが低いと思われる
% * 構文、型チェッカが自前で用意されているのでチェッカがすぐ実装できる
%     ** 実際今回flycheckの設定を書いた
% * 基本的に存在するサンプルがかなり少ない
%     ** 今回は割とgfnに直接聞いて何とかした
%     ** e.g., ページサイズをA4からB5に変更した
% * 周辺の機能が未整備。がんばろうな
%     ** fontのインストールが大変
%     ** \(primitive以外の\)必要な機能が幾つか未実装
%         *** 未実装の数式の記号がある \(\\cdot, \\triangle\)
%         *** \\insert-image \(pngの挿入\) はdemoにはあったが pdfの挿入はどこにもなかった
%         *** 図の作成機能: grはあるが今回例えばオートマトンの図を作るのはtikzでやった。もしかしたらgrでもできるかも
%     ** パッケージマネージャがない
%     ** 書誌情報の管理 \(BibTeX的なもの\) がない
%         *** 一応dblpのxml出力をsatysfiの形式に変換するxsltプログラムは今回書いた
%         *** BibTeXの、実際に使っているものだけを出力する機能はない。
% }} 

% >

  >
>